@page "/"
@using OrdersDashboard.Web.Models
@using OrdersDashboard.Web.Services
@inject IOrderService OrderService
@inject IAzureSearchService AzureSearchService

<PageTitle>Orders Dashboard</PageTitle>

<h1>Orders Dashboard</h1>

@if (isLoading)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading dashboard data...</p>
    </div>
}
else
{
    <DashboardMetricsComponent Metrics="@dashboardMetrics" />
    <OrdersGrid Orders="@orders" />
}

@code {
    private DashboardMetrics dashboardMetrics = new();
    private IEnumerable<Order> orders = new List<Order>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Get dashboard metrics from the existing OrderService
            dashboardMetrics = await OrderService.GetDashboardMetricsAsync();
            
            // Get orders from the new Azure Search service
            orders = await AzureSearchService.GetOrdersAsync();
        }
        finally
        {
            isLoading = false;
        }
    }
}
